// Generated by view binder compiler. Do not edit!
package com.mintic22.celecta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toolbar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mintic22.celecta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderDetailDialogBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btBuyProduct;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final Toolbar toolbarProduct;

  @NonNull
  public final TextView tvDescriptionProduct;

  @NonNull
  public final TextView tvNameProduct;

  @NonNull
  public final TextView tvPriceProduct;

  private FragmentOrderDetailDialogBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btBuyProduct, @NonNull ImageView ivProduct, @NonNull Toolbar toolbarProduct,
      @NonNull TextView tvDescriptionProduct, @NonNull TextView tvNameProduct,
      @NonNull TextView tvPriceProduct) {
    this.rootView = rootView;
    this.btBuyProduct = btBuyProduct;
    this.ivProduct = ivProduct;
    this.toolbarProduct = toolbarProduct;
    this.tvDescriptionProduct = tvDescriptionProduct;
    this.tvNameProduct = tvNameProduct;
    this.tvPriceProduct = tvPriceProduct;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderDetailDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderDetailDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_detail_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderDetailDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btBuyProduct;
      Button btBuyProduct = ViewBindings.findChildViewById(rootView, id);
      if (btBuyProduct == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.toolbarProduct;
      Toolbar toolbarProduct = ViewBindings.findChildViewById(rootView, id);
      if (toolbarProduct == null) {
        break missingId;
      }

      id = R.id.tvDescriptionProduct;
      TextView tvDescriptionProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvDescriptionProduct == null) {
        break missingId;
      }

      id = R.id.tvNameProduct;
      TextView tvNameProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvNameProduct == null) {
        break missingId;
      }

      id = R.id.tvPriceProduct;
      TextView tvPriceProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvPriceProduct == null) {
        break missingId;
      }

      return new FragmentOrderDetailDialogBinding((CoordinatorLayout) rootView, btBuyProduct,
          ivProduct, toolbarProduct, tvDescriptionProduct, tvNameProduct, tvPriceProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
